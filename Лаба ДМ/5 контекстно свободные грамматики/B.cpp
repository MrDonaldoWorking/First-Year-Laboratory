/*
      РћЈРћЊРћЈРћЂРћ│РћЈРћЂРћЈРћЊРћЈРћ│РћЊРћЃРћЈРћЊРћЈРћЊРћ│РћЃРћЈРћЊРћЈРћЊ
      РћЃРћЃРћБРћЂРћЃРћБРћЂРћБРћФРћЃРћЃРћЃРћЃРћЃРћЃРћБРћФРћЃРћЃРћЌРћЏРћЃРћЃ
      РћБРћЏРћЌРћЂРћЃРћЌРћЂРћЃРћЌРћЃРћЃРћЃРћЃРћЃРћЃРћЃРћЃРћЃРћЃ  РћЃРћЃ
 
             РацРаХРаХРаХРаХРаХРаХРацРаё
 РађРађРађРађРађРађРађРааРаЙРа┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐РаиРаё
 РађРађРађРађРађРађРааРа┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Ра┐Раё
 РађРађРађРађРађРађРаИРа┐РаЏРаЅРаЅРаЅРа╗Ра┐Ра┐РаЪРаЅРаЅРаЅРаЏРа┐РаЄ
 РађРађРађРађРађРађРаИРаЄРађРађРаХРађРаИРа┐Ра┐РаЄ ­Ъћх РаИРаЄ
 РађРађРађРађРађРађРађРа╗РаХРацРацРааРа┐РаЃРаўРа┐РаёРацРацРаХРаЪ
 РађРађРађРађРађРађРађРаЙРа┐РаЎРаХРа┐Ра┐РацРацРа┐Ра┐РаХРаЈРа╗Раи
 РађРађРађРађРађРађРађРа╗РаХРаюРа░РаГРаЕРаЇРаГРаЇРаГРа▒РааРаХРаЪ
 РађРађРађРађРааРаХРадРаѕРа╗Ра┐РаХРаГРаўРаЃРаЏРаЃРаФРа┤Ра┐РаЪРаАРаЙРаЪРаѓ
 РађРађРађРађРаіРаЅРаЏРа│РадРаѕРаЅРаЏРаЏРаЏРаЏРаЏРаЏРаЅРаЂРааРа┐РаІРађРа▒Раё
 РађРађРађРаћРађРађРаёРађРаЅРа│РадРаёРа│РаХРаХРаЃРааРацРаъРаЏРаЂРааРаѓРађРаЎРаё
 РађРађРајРађРађРађРаЄРађРађРаИРађРаЈРааРаГРаЇРаѕРаЈРаЄРађРађРађРа╝РађРађРађРаЎРає
 РађРа╝РађРађРађРађРаиРаћРањРаџРаЇРаБРаИРа┐Ра┐РаИРаІРаЄРааРа┤РаџРа╣РађРађРађРађРа╗
 РађРа╗РаёРађРађРа░РаЂРађРађРађРаЌРа╣РаИРа┐Ра┐РаИРаЅРаЄРаЄРађРађРаѕРаЄРађРађРађРаИ
 РађРађРаЎРадРаёРаИРађРађРађРађРа▒Ра╣РаИРа┐Ра┐РаИРа╣РаюРађРађРађРађРаЄРађРађРа┤РаІ
 РађРађРађРаѕРаЃРа╝РаХРаёРађРађРаИРаЙРаХРањРањРаџРаЙРацРацРацРацРаЙРаЃРаХРаіРаЂ
 РађРађРађРађРађРађРаЅРаЅРаЅРаЅРаЂРађРађРађРађРађРађРађРађРађРађРаЅ
 РађРађРађРађРађРађРаћРађРаХРађРађРађРађРађРађРађРађРаИРаЄРађРађРаБ
 РађРађРађРађРађРађРаЄРаИРаЄРађРађРађРађРајРаєРађРађРаИРаДРађРађРаИ
 РађРађРађРађРађРа░РаЂРаЙРаЂРађРађРађРааРаЄРа▒РађРађРаИРа┐РађРађРађРаЄ
 РађРађРађРађРађРаИРађРа┐РађРађРађРађРаИРађРаИРађРађРађРа┐РађРађРађРаЄ
 РађРађРађРађРађРаѕРаЅРаЅРањРањРањРањРаіРађРаѕРањРањРањРаЏРаЊРаіРаЅРаЂ
 РађРађРађРађРааРаХРаХРацРа▓РаХРађРађРађРађРађРађРааРаиРаХРаХРаѓРацРаХРадРаё
 РађРађРађРађРа┐Ра┐Ра┐Ра┐РаДРаЕРаёРађРађРађРађРађРагРаГРаГРа▒Ра┐Ра┐Ра┐Ра┐РаЪ
 
 
       РќЉРќЉРќЉРќЉРќѕРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќѕРќЉРќЉРќЉРќЉ
       РќЉРќЉРќЉРќѕРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќЉРќёРќёРќёРќЉРќЉРќѕРќЉРќЉРќЉ
       РќЉРќЉРќЉРќѕРќЉРќЉРќёРќёРќёРќЉРќЉРќёРќЉРќЉРќѕРќѕРќѕРќЉРќЉРќѕРќЉРќЉРќЉ
       РќЉРќЉРќЉРќёРќѕРќЉРќёРќЉРќЉРќЉРќђРќђРќђРќЉРќЉРќЉРќёРќЉРќѕРќёРќЉРќЉРќЉ
       РќЉРќЉРќЉРќѕРќЉРќЉРќђРќѕРќђРќѕРќђРќѕРќђРќѕРќђРќѕРќђРќЉРќЉРќѕРќЉРќЉРќЉ
       РќЉРќЉРќЉРќёРќѕРќѕРќёРќёРќђРќђРќђРќђРќђРќђРќђРќёРќёРќѕРќѕРќёРќЉРќЉРќЉ
       РќЉРќёРќѕРќЉРќѕРќђРќђРќѕРќђРќђРќђРќѕРќђРќђРќђРќѕРќђРќђРќѕРќЉРќѕРќёРќЉ
       РќёРќђРќЉРќёРќёРќђРќёРќёРќђРќђРќђРќёРќђРќђРќђРќёРќёРќђРќёРќёРќЉРќђРќё
       РќѕРќЉРќЉРќЉРќЉРќђРќёРќЉРќѕРќёРќЉРќЉРќЉРќёРќѕРќЉРќёРќђРќЉРќЉРќЉРќЉРќѕ
       РќЉРќђРќёРќёРќЉРќѕРќЉРќЉРќѕРќёРќёРќёРќёРќёРќѕРќЉРќЉРќѕРќЉРќёРќёРќђРќЉ
       РќЉРќЉРќЉРќђРќѕРќѕРќёРќёРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќёРќёРќѕРќѕРќђРќЉРќЉРќЉ
       РќЉРќЉРќЉРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќђРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќЉРќЉРќЉ
       РќЉРќЉРќёРќёРќѕРќђРќђРќђРќђРќѕРќЉРќЉРќЉРќѕРќђРќђРќђРќђРќѕРќёРќёРќЉРќЉ
       РќЉРќЉРќђРќёРќёРќёРќёРќёРќђРќђРќЉРќЉРќЉРќђРќђРќёРќёРќёРќёРќёРќђРќЉРќЉ
*/
 
#include <stdio.h>
#include <string>
#include <map>
#include <set>
 
using namespace std;
 
bool readString(string &s) {
    char c;
    while (scanf("%c", &c) == 1) {
        if (c == ' ' || c == '\n')
            break;
        s += c;
    }
 
    return !s.empty();
}
 
void merge(set<char> &a, set<char> &b) {
    for (char c : b)
        a.insert(c);
}
 
int main() {
    freopen("automaton.in", "r", stdin);
    freopen("automaton.out", "w", stdout);
 
    int n;
    char start;
    scanf("%d %c\n", &n, &start);
 
    map<char, map<char, set<char>>> graph;
    while (n--) {
        char from, letter, to;
        scanf("%c -> %c%c", &from, &letter, &to);
 
        graph[from][letter].insert(to);
 
        if (to != '\n')
            scanf("\n");
    }
 
    scanf("%d\n", &n);
    while (n--) {
        string s;
        readString(s);
 
        set<char> prev, curr;
        prev.insert(start);
        for (char c : s) {
            curr.clear();
            for (char v : prev)
                merge(curr, graph[v][c]);
            prev = curr;
        }
        printf((prev.count('\n') ? "yes\n" : "no\n"));
    }
 
    return 0;
}
